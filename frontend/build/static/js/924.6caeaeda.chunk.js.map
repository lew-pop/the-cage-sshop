{"version":3,"file":"static/js/924.6caeaeda.chunk.js","mappings":"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","sources":["components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js","pages/ShopGridFilter.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getIndividualBrands,\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n  setActiveSort\r\n} from \"../../helpers/product\";\r\n\r\nconst ShopTopFilter = ({ products, getSortParams }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n  const uniqueBrands = getIndividualBrands(products);\r\n  return (\r\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\r\n      <div className=\"product-filter-wrapper__inner\">\r\n        <div className=\"row\">\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Categories</h5>\r\n              {uniqueCategories ? (\r\n                <ul>\r\n                  {uniqueCategories.map((category, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"category\", category);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No categories found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Color</h5>\r\n              {uniqueColors ? (\r\n                <ul>\r\n                  {uniqueColors.map((color, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"color\", color);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {color}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No colors found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Size</h5>\r\n              {uniqueSizes ? (\r\n                <ul>\r\n                  {uniqueSizes.map((size, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          className=\"text-uppercase\"\r\n                          onClick={e => {\r\n                            getSortParams(\"size\", size);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {size}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No sizes found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter product-filter--tag\">\r\n              <h5>Tag</h5>\r\n              {uniqueTags ? (\r\n                <ul>\r\n                  {uniqueTags.map((tag, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"tag\", tag);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No tags found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Brand</h5>\r\n              {uniqueBrands ? (\r\n                <ul>\r\n                  {uniqueBrands.map((brand, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"brands\", brand);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {brand}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No brands found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopFilter.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopTopFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopFilter from \"./ShopTopFilter\";\r\nimport { toggleShopTopFilter } from \"../../helpers/product\";\r\n\r\nconst ShopTopActionFilter = ({\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"shop-top-bar mb-35\">\r\n        <div className=\"select-shoing-wrap\">\r\n          <div className=\"shop-select\">\r\n            <select\r\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"priceHighToLow\">Price - High to Low</option>\r\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n            </select>\r\n          </div>\r\n          <p>\r\n            Showing {sortedProductCount} of {productCount} result\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"filter-active\">\r\n          <button onClick={e => toggleShopTopFilter(e)}>\r\n            <i className=\"fa fa-plus text-light\"></i> filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* shop top filter */}\r\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopActionFilter.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopActionFilter;\r\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount,\n  products,\n  getSortParams\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopActionFilter\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n        products={products}\n        getSortParams={getSortParams}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  getSortParams: PropTypes.func,\n  productCount: PropTypes.number,\n  products: PropTypes.array,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport LayoutOne from \"../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbarFilter from \"../wrappers/product/ShopTopbarFilter\";\r\nimport ShopProducts from \"../wrappers/product/ShopProducts\";\r\n\r\nconst ShopGridFilter = () => {\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 15;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of The Cage SShop Online | Vape and Smoke Accessories.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/breadcrumb-light.png\"\r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar filter */}\r\n                <ShopTopbarFilter\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopGridFilter;\r\n"],"names":["_ref","products","getSortParams","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","uniqueBrands","getIndividualBrands","_jsx","className","id","children","_jsxs","map","category","key","onClick","e","setActiveSort","color","size","tag","brand","getFilterSortParams","productCount","sortedProductCount","Fragment","onChange","target","value","toggleShopTopFilter","ShopTopFilter","getLayout","ShopTopActionFilter","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","ShopTopbarFilter","length","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"sourceRoot":""}