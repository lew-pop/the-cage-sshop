{"version":3,"file":"static/js/770.80abe464.chunk.js","mappings":"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","sources":["pages/ShopBrandGrid.js","store/services/product.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport { getSortedProducts } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport LayoutOne from \"../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../wrappers/product/ShopProducts\";\r\n\r\nconst ShopBrandGrid = () => {\r\n  let { pathname } = useLocation();\r\n  let { id } = useParams();\r\n\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\"brand\");\r\n  const [sortValue, setSortValue] = useState(id);\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 15;\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"The Cage Product Catalog\"\r\n        description=\"The Cage SShop Product Catalog.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/breadcrumb-light.png\"\r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                {/* shop sidebar */}\r\n                <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopBrandGrid;\r\n","import { cageApi } from \"./cageApi\";\r\n\r\nexport const productApi = cageApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // Product endpoints\r\n    listProducts: builder.query({\r\n      query: () =>  `products/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByCategory: builder.query({\r\n      query: (category) => `products/category/${category}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByTag: builder.query({\r\n      query: (id) => `products/tag/${id}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listTopProducts: builder.query({\r\n      query: () => \"products/top/\",\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    getProduct: builder.query({\r\n      query: (id) => `products/${id}/`, // Replace with your actual API endpoint\r\n      providesTags: (result, error, id) => [{ type: 'Product', id }],\r\n    }),\r\n    getProducts: builder.query({\r\n      query: (query) =>  `products/query/${query}`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    deleteProduct: builder.mutation({\r\n      query: (id) => ({\r\n        url: `products/delete/${id}/`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    createProduct: builder.mutation({\r\n      query: () => ({\r\n        url: `products/create/`,\r\n        method: 'POST',\r\n        body: {},\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    updateProduct: builder.mutation({\r\n      query: (product) => ({\r\n        url: `products/update/${product.id}/`,\r\n        method: 'PUT',\r\n        body: product,\r\n      }),\r\n      invalidatesTags: (result, error, product) => [{ type: 'Product', id: product.id }],\r\n    }),\r\n    createProductReview: builder.mutation({\r\n      query: ({ productId, review }) => ({\r\n        url: `products/${productId}/reviews/`,\r\n        method: 'POST',\r\n        body: review,\r\n      }),\r\n      invalidatesTags: (result, error, { productId }) => [{ type: 'Product', id: productId }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useListProductsQuery,\r\n  useListProductsByCategoryQuery,\r\n  useListProductsByTagQuery,\r\n  useListTopProductsQuery,\r\n  useGetProductQuery,\r\n  useGetProductsQuery,\r\n  useDeleteProductMutation,\r\n  useCreateProductMutation,\r\n  useUpdateProductMutation,\r\n  useCreateProductReviewMutation,\r\n} = productApi;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/services/product\";\r\n\r\n\r\nconst ShopSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const HandleSearch = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    // Fetch products from backend using searchTerm\r\n    const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n    \r\n    navigate(`/shop-filtered-grid/${data}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" onSubmit={HandleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search here...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button type=\"submit\">\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getIndividualCategories,\n  getIndividualTags,\n  getIndividualColors,\n  getProductsIndividualSizes,\n} from \"../../helpers/product\";\nimport ShopSearch from \"../../components/product/ShopSearch\";\nimport ShopCategories from \"../../components/product/ShopCategories\";\nimport ShopTag from \"../../components/product/ShopTag\";\nimport { useListProductsQuery } from \"../../store/services/product\";\nimport { setProducts } from \"../../store/slices/product-slice\";\nimport { store } from \"../../store/store\";\n\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\n  const uniqueCategories = getIndividualCategories(products);\n  const uniqueTags = getIndividualTags(products);\n\n  return (\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\n      {/* shop search */}\n      <ShopSearch />\n\n      {/* filter by categories */}\n      <ShopCategories\n        categories={uniqueCategories}\n        getSortParams={getSortParams}\n      />\n\n      {/* filter by tag */}\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams} />\n    </div>\n  );\n};\n\nShopSidebar.propTypes = {\n  getSortParams: PropTypes.func,\n  products: PropTypes.array,\n  sideSpaceClass: PropTypes.string,\n};\n\nexport default ShopSidebar;\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div>\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopAction\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  productCount: PropTypes.number,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n"],"names":["pathname","useLocation","id","useParams","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","products","useSelector","state","product","useEffect","getSortedProducts","filterSortedProducts","slice","_jsxs","Fragment","children","_jsx","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","className","ShopSidebar","getSortParams","sideSpaceClass","ShopTopbar","getLayout","getFilterSortParams","productCount","length","sortedProductCount","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","productApi","cageApi","injectEndpoints","endpoints","builder","listProducts","query","providesTags","listProductsByCategory","category","concat","listProductsByTag","listTopProducts","getProduct","result","error","type","getProducts","deleteProduct","mutation","url","method","invalidatesTags","createProduct","body","updateProduct","createProductReview","_ref","productId","review","_ref2","useListProductsQuery","useListProductsByCategoryQuery","useListProductsByTagQuery","useListTopProductsQuery","useGetProductQuery","useGetProductsQuery","useDeleteProductMutation","useCreateProductMutation","useUpdateProductMutation","useCreateProductReviewMutation","searchTerm","setSearchTerm","navigate","useNavigate","onSubmit","e","preventDefault","_useListProductsByTag","data","isLoading","message","placeholder","value","onChange","target","categories","onClick","setActiveSort","map","key","tags","tag","uniqueCategories","getIndividualCategories","uniqueTags","getIndividualTags","clsx","ShopSearch","ShopCategories","ShopTag","setActiveLayout","ShopTopAction"],"sourceRoot":""}