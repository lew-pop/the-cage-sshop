{"version":3,"file":"static/js/908.12b9bd41.chunk.js","mappings":"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","sources":["pages/ShopFilteredGrid.js","store/services/product.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { useListProductsByTagQuery } from \"../store/services/product\";\r\nimport { getSortedProducts } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport LayoutOne from \"../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../wrappers/product/ShopProducts\";\r\nimport { useListProductsQuery } from \"../store/services/product\";\r\nimport { setProducts } from \"../store/slices/product-slice\";\r\nimport { store } from \"../store/store\";\r\n\r\nconst ShopFilteredGrid = () => {\r\n  let { id } = useParams();\r\n  const { data: products, error, isLoading } = useListProductsQuery();\r\n  store.dispatch(setProducts(products));\r\n \r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\"category\");\r\n  const [sortValue, setSortValue] = useState(id);\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n  console.log(\"Products: \", products);\r\n  const pageLimit = 15;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"The Cage Product Catalog\"\r\n        description=\"The Cage SShop Product Catalog.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"/assets/img/bg/breadcrumb.png\"\r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                {/* shop sidebar */}\r\n                <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopFilteredGrid;\r\n","import { api } from \"./api\";\r\n\r\nexport const productApi = api.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // Product endpoints\r\n    listProducts: builder.query({\r\n      query: () =>  \"/products/\",\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByCategory: builder.query({\r\n      query: (category) => `/products/category/${category}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByTag: builder.query({\r\n      query: (id) => `/products/tag/${id}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listTopProducts: builder.query({\r\n      query: () => \"/products/top/\",\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    getProduct: builder.query({\r\n      query: (id) => `/products/${id}/`, // Replace with your actual API endpoint\r\n      providesTags: (result, error, id) => [{ type: 'Product', id }],\r\n    }),\r\n    deleteProduct: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/products/delete/${id}/`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    createProduct: builder.mutation({\r\n      query: () => ({\r\n        url: `/products/create/`,\r\n        method: 'POST',\r\n        body: {},\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    updateProduct: builder.mutation({\r\n      query: (product) => ({\r\n        url: `/products/update/${product.id}/`,\r\n        method: 'PUT',\r\n        body: product,\r\n      }),\r\n      invalidatesTags: (result, error, product) => [{ type: 'Product', id: product.id }],\r\n    }),\r\n    createProductReview: builder.mutation({\r\n      query: ({ productId, review }) => ({\r\n        url: `/products/${productId}/reviews/`,\r\n        method: 'POST',\r\n        body: review,\r\n      }),\r\n      invalidatesTags: (result, error, { productId }) => [{ type: 'Product', id: productId }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useListProductsQuery,\r\n  useListProductsByCategoryQuery,\r\n  useListProductsByTagQuery,\r\n  useListTopProductsQuery,\r\n  useGetProductQuery,\r\n  useDeleteProductMutation,\r\n  useCreateProductMutation,\r\n  useUpdateProductMutation,\r\n  useCreateProductReviewMutation,\r\n} = productApi;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/services/product\";\r\n\r\n\r\nconst ShopSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const HandleSearch = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    // Fetch products from backend using searchTerm\r\n    const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n    \r\n    navigate(`/shop-filtered-grid/${data}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" onSubmit={HandleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search here...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button type=\"submit\">\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useListProductsByCategoryQuery } from \"../../store/services/product\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [productData, setProductData] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const { data, isLoading, error } = useListProductsByCategoryQuery(searchTerm);\r\n\r\n  useEffect(() => {\r\n    setProductData(data);\r\n\r\n    if (productData) {\r\n      navigate(`/shop-filtered-grid/${productData}`);\r\n    }\r\n  }, [searchTerm, productData, navigate]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={(e) => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={(e) => {\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                        setSearchTerm(category);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func,\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/services/product\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [productData, setProductData] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n  useEffect(() => {   \r\n    setProductData(data);\r\n\r\n    if (productData) {\r\n      navigate(`/shop-filtered-grid/${productData}`);\r\n    }\r\n  }, [searchTerm, productData, navigate]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                      setSearchTerm(key);                      \r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n  getIndividualCategories,\n  getIndividualTags,\n  getIndividualColors,\n  getProductsIndividualSizes\n} from \"../../helpers/product\";\nimport ShopSearch from \"../../components/product/ShopSearch\";\nimport ShopCategories from \"../../components/product/ShopCategories\";\nimport ShopTag from \"../../components/product/ShopTag\";\n\n\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\n  const uniqueCategories = getIndividualCategories(products);\n  const uniqueTags = getIndividualTags(products);\n\n  return (\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\n      {/* shop search */}\n      <ShopSearch />\n\n      {/* filter by categories */}\n      <ShopCategories\n        categories={uniqueCategories}\n        getSortParams={getSortParams}\n      />\n\n      {/* filter by tag */}\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams} />\n    </div>\n  );\n};\n\nShopSidebar.propTypes = {\n  getSortParams: PropTypes.func,\n  products: PropTypes.array,\n  sideSpaceClass: PropTypes.string\n};\n\nexport default ShopSidebar;\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div>\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopAction\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  productCount: PropTypes.number,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n"],"names":["id","useParams","_useListProductsQuery","useListProductsQuery","products","data","error","isLoading","store","dispatch","setProducts","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","console","log","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","_jsx","children","_jsxs","message","Fragment","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","className","ShopSidebar","getSortParams","sideSpaceClass","ShopTopbar","getLayout","getFilterSortParams","productCount","length","sortedProductCount","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","productApi","api","injectEndpoints","endpoints","builder","listProducts","query","providesTags","listProductsByCategory","category","concat","listProductsByTag","listTopProducts","getProduct","result","type","deleteProduct","mutation","url","method","invalidatesTags","createProduct","body","updateProduct","product","createProductReview","_ref","productId","review","_ref2","useListProductsByCategoryQuery","useListProductsByTagQuery","useListTopProductsQuery","useGetProductQuery","useDeleteProductMutation","useCreateProductMutation","useUpdateProductMutation","useCreateProductReviewMutation","searchTerm","setSearchTerm","navigate","useNavigate","onSubmit","e","preventDefault","_useListProductsByTag","placeholder","value","onChange","target","categories","productData","setProductData","_useListProductsByCat","onClick","setActiveSort","map","key","tags","tag","uniqueCategories","getIndividualCategories","uniqueTags","getIndividualTags","clsx","ShopSearch","ShopCategories","ShopTag","setActiveLayout","ShopTopAction"],"sourceRoot":""}