{"version":3,"file":"static/js/908.915e84ff.chunk.js","mappings":"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","sources":["pages/ShopFilteredGrid.js","store/services/product.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { useListProductsByTagQuery } from \"../store/services/product\";\r\nimport { getSortedProducts } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport LayoutOne from \"../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../wrappers/product/ShopProducts\";\r\n\r\nconst ShopFilteredGrid = () => {\r\n  let { pathname } = useLocation();\r\n  let { id } = useParams();\r\n  console.log(\"id: \", id);\r\n  const { data, isLoading, error } = useListProductsByTagQuery(id);\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\"tag\");\r\n  const [sortValue, setSortValue] = useState(id);\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  console.log(\"Data: \", data);\r\n  const pageLimit = 15;\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [\r\n    offset,\r\n    products,\r\n    sortType,\r\n    sortValue,\r\n    filterSortType,\r\n    filterSortValue,\r\n    id,\r\n  ]);\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"The Cage Product Catalog\"\r\n        description=\"The Cage SShop Product Catalog.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/breadcrumb-light.png\"\r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                {/* shop sidebar */}\r\n                <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={data} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={data.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopFilteredGrid;\r\n","import { api } from \"./api\";\r\n\r\nexport const productApi = api.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // Product endpoints\r\n    listProducts: builder.query({\r\n      query: () =>  `/products/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByCategory: builder.query({\r\n      query: (category) => `/products/category/${category}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByTag: builder.query({\r\n      query: (id) => `/products/tag/${id}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listTopProducts: builder.query({\r\n      query: () => \"/products/top/\",\r\n      providesTags: [\"Product\"],\r\n    }),\r\n     getProduct: builder.query({\r\n      query: (id) => `/products/${id}/`, // Replace with your actual API endpoint\r\n      providesTags: (result, error, id) => [{ type: 'Product', id }],\r\n    }),\r\n    deleteProduct: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/products/delete/${id}/`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    createProduct: builder.mutation({\r\n      query: () => ({\r\n        url: `/products/create/`,\r\n        method: 'POST',\r\n        body: {},\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    updateProduct: builder.mutation({\r\n      query: (product) => ({\r\n        url: `/products/update/${product.id}/`,\r\n        method: 'PUT',\r\n        body: product,\r\n      }),\r\n      invalidatesTags: (result, error, product) => [{ type: 'Product', id: product.id }],\r\n    }),\r\n    createProductReview: builder.mutation({\r\n      query: ({ productId, review }) => ({\r\n        url: `/products/${productId}/reviews/`,\r\n        method: 'POST',\r\n        body: review,\r\n      }),\r\n      invalidatesTags: (result, error, { productId }) => [{ type: 'Product', id: productId }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useListProductsQuery,\r\n  useListProductsByCategoryQuery,\r\n  useListProductsByTagQuery,\r\n  useListTopProductsQuery,\r\n  useGetProductQuery,\r\n  useDeleteProductMutation,\r\n  useCreateProductMutation,\r\n  useUpdateProductMutation,\r\n  useCreateProductReviewMutation,\r\n} = productApi;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/services/product\";\r\n\r\n\r\nconst ShopSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const HandleSearch = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    // Fetch products from backend using searchTerm\r\n    const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n    \r\n    navigate(`/shop-filtered-grid/${data}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" onSubmit={HandleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search here...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button type=\"submit\">\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useListProductsByCategoryQuery } from \"../../store/services/product\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [productData, setProductData] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const { data, isLoading, error } = useListProductsByCategoryQuery(searchTerm);\r\n\r\n  useEffect(() => {\r\n    setProductData(data);\r\n\r\n    if (productData) {\r\n      navigate(`/shop-filtered-grid/${productData}`);\r\n    }\r\n  }, [searchTerm, productData, navigate]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={(e) => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={(e) => {\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                        setSearchTerm(category);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func,\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/services/product\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [productData, setProductData] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n  useEffect(() => {   \r\n    setProductData(data);\r\n\r\n    if (productData) {\r\n      navigate(`/shop-filtered-grid/${productData}`);\r\n    }\r\n  }, [searchTerm, productData, navigate]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                      setSearchTerm(key);                      \r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n  getIndividualBrands,\n  getIndividualCategories,\n  getIndividualTags,\n  getIndividualColors,\n  getProductsIndividualSizes\n} from \"../../helpers/product\";\nimport ShopSearch from \"../../components/product/ShopSearch\";\nimport ShopCategories from \"../../components/product/ShopCategories\";\nimport ShopColor from \"../../components/product/ShopColor\";\nimport ShopSize from \"../../components/product/ShopSize\";\nimport ShopTag from \"../../components/product/ShopTag\";\nimport ShopBrand from \"../../components/product/ShopBrand\";\n\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\n  const uniqueCategories = getIndividualCategories(products);\n  const uniqueTags = getIndividualTags(products);\n  \n\n  return (\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\n      {/* shop search */}\n      <ShopSearch />\n\n      {/* filter by categories */}\n      <ShopCategories\n        categories={uniqueCategories}\n        getSortParams={getSortParams}\n      />\n\n      {/* filter by tag */}\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams} />     \n\n    </div>\n  );\n};\n\nShopSidebar.propTypes = {\n  getSortParams: PropTypes.func,\n  products: PropTypes.array,\n  sideSpaceClass: PropTypes.string\n};\n\nexport default ShopSidebar;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount,\n  products,\n  getSortParams\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopActionFilter\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n        products={products}\n        getSortParams={getSortParams}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  getSortParams: PropTypes.func,\n  productCount: PropTypes.number,\n  products: PropTypes.array,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n"],"names":["pathname","useLocation","id","useParams","console","log","_useListProductsByTag","useListProductsByTagQuery","data","isLoading","error","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","setSortedProducts","products","useSelector","state","product","useEffect","sortedProducts","getSortedProducts","filterSortedProducts","slice","_jsx","children","_jsxs","message","Fragment","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","className","ShopSidebar","getSortParams","sideSpaceClass","ShopTopbar","getLayout","getFilterSortParams","productCount","length","sortedProductCount","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","productApi","api","injectEndpoints","endpoints","builder","listProducts","query","providesTags","listProductsByCategory","category","concat","listProductsByTag","listTopProducts","getProduct","result","type","deleteProduct","mutation","url","method","invalidatesTags","createProduct","body","updateProduct","createProductReview","_ref","productId","review","_ref2","useListProductsQuery","useListProductsByCategoryQuery","useListTopProductsQuery","useGetProductQuery","useDeleteProductMutation","useCreateProductMutation","useUpdateProductMutation","useCreateProductReviewMutation","searchTerm","setSearchTerm","navigate","useNavigate","onSubmit","e","preventDefault","placeholder","value","onChange","target","categories","productData","setProductData","_useListProductsByCat","onClick","setActiveSort","map","key","tags","tag","uniqueCategories","getIndividualCategories","uniqueTags","getIndividualTags","clsx","ShopSearch","ShopCategories","ShopTag","ShopTopActionFilter"],"sourceRoot":""}