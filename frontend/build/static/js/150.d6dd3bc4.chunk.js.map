{"version":3,"file":"static/js/150.d6dd3bc4.chunk.js","mappings":"uOAwQA,UAxPsB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,MAAbD,SACAE,GAAYC,EAAAA,EAAAA,KAAZD,QAIAE,GAAeC,EAAAA,EAAAA,IAAyBH,GACtCI,EAA0BF,EAA1BE,MACRC,GADkCH,EAAnBI,MAAmBJ,EAAZK,SACUC,EAAAA,EAAAA,WAAS,IAAMC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAxCM,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA4BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCT,EAAAA,EAAAA,UAAS,CACzCU,IAAK,GACLC,OAAQ,KACRC,GAAAV,EAAAA,EAAAA,GAAAO,EAAA,GAHKI,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA6BxBG,EAAmB,WACvB,IACMC,EAAiB,IAAIC,OAAOC,OADnB,mCACkC,CAC/CC,WAAY,oBAGdX,EAAUQ,GACV,IAAMI,EAAWb,EAAOa,WAGlBC,EAAaD,EAASE,OAAO,eAC7BC,EAAWH,EAASE,OAAO,aAC3BE,EAAWJ,EAASE,OAAO,aAC3BG,EAAUL,EAASE,OAAO,YAC1BI,EAAiBN,EAASE,OAAO,oBAGvCD,EAAWM,MAAM,gBACjBJ,EAASI,MAAM,cACfH,EAASG,MAAM,cACfF,EAAQE,MAAM,aACdD,EAAeC,MAAM,qBAGrB,IAAMC,EAAoB,SAACC,EAASC,EAAgBC,GAClD,IAAMC,EAAeC,SAASC,eAAeJ,GAC7CD,EAAQM,iBAAiB,UAAU,SAAUC,GAC3CJ,EAAaK,UAAYD,EAAML,GAAUjC,OAAS,EACpD,IACA+B,EAAQM,iBAAiB,QAAQ,SAAUC,GACzCJ,EAAaK,UAAYD,EAAML,GAAUjC,OAAS,EACpD,GACF,EAEA8B,EAAkBP,EAAY,qBAAsB,eACpDO,EAAkBL,EAAU,mBAAoB,aAChDK,EAAkBJ,EAAU,mBAAoB,aAChDI,EAAkBH,EAAS,kBAAmB,YAC9CG,EACEF,EACA,0BACA,mBAEJ,GAEAY,EAAAA,EAAAA,YAAU,WACH1C,GAASA,EAAMc,MAAQ6B,OAAO/C,GAGvBI,EAAM4C,QACXrC,GA/De,WACtB,IAAMsC,EAASR,SAASS,cAAc,UACtCD,EAAOE,KAAO,kBACdF,EAAOG,IAAM,iDACbH,EAAOI,OAAQ,EACfJ,EAAOK,OAAS,WACd1C,GAAY,GACZW,GACF,EACAkB,SAASc,KAAKC,YAAYP,EAC5B,CAsDMQ,GAHF7D,EAASO,EAAAA,GAAyBuD,SAAS1D,GAM/C,GAAG,CAACJ,EAAUQ,EAAOJ,EAASW,IAE9B,IAAMgD,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOpB,GAAK,IAAAqB,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,GAAvB1B,EAAM2B,kBACFxD,EAAO,CAADqD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEevD,EAAOyD,cAAc,KAAD,EAA7B,KAANP,EAAMG,EAAAK,MACDC,OAAO,CAADN,EAAAE,KAAA,SACfK,OAAOC,OAAOX,EAAOS,QAAQG,SAAQ,SAACC,GACpCC,QAAQC,IAAIF,EACd,IAAGV,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAEiBL,EAAOC,MAAM,KAAD,GAA1BA,EAAKE,EAAAK,KACXnD,GAAY2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACT5D,GAAS,IACZH,IAAKlB,EACLmB,OAAQ+C,KAEVgB,MAAMhB,GACNiB,EAAAA,GAAoBzB,SAASrC,GAC7B,QAAA+C,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,SAGFW,QAAQC,IAAGZ,EAAAgB,IAAQ,yBAAAhB,EAAAiB,OAAA,GAAArB,EAAA,mBAGxB,gBAxBiBsB,GAAA,OAAA1B,EAAA2B,MAAA,KAAAC,UAAA,KAqElB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,cAAc,WACdC,YAAY,mDAEdN,EAAAA,EAAAA,MAACO,EAAAA,EAAS,CAACC,UAAU,WAAUN,SAAA,EAE7BC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CACTC,MAAO,CACL,CAAEC,MAAO,OAAQC,KAA+B,KAChD,CAAED,MAAO,WAAYC,KAAMC,GAAyBxG,IAEtDyG,gBAAgB,mCAElBX,EAAAA,EAAAA,KAAA,OAAKY,MAAM,YAAWb,UACpBF,EAAAA,EAAAA,MAAA,QACEgB,OAAO,UACPC,OAAO,OACPC,GAAG,eACHC,SAAUjD,EAAagC,SAAA,EAEvBF,EAAAA,EAAAA,MAAA,OAAKe,MAAM,mBAAkBb,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKe,GAAG,cAAcH,MAAM,uBAC5BZ,EAAAA,EAAAA,KAAA,OACEY,MAAM,eACNG,GAAG,qBACHE,KAAK,cAGTpB,EAAAA,EAAAA,MAAA,OAAKe,MAAM,WAAUb,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKe,GAAG,YAAYH,MAAM,qBAC1BZ,EAAAA,EAAAA,KAAA,OACEY,MAAM,eACNG,GAAG,mBACHE,KAAK,cAGTpB,EAAAA,EAAAA,MAAA,OAAKe,MAAM,WAAUb,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKe,GAAG,YAAYH,MAAM,qBAC1BZ,EAAAA,EAAAA,KAAA,OACEY,MAAM,eACNG,GAAG,mBACHE,KAAK,cAGTpB,EAAAA,EAAAA,MAAA,OAAKe,MAAM,WAAUb,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKe,GAAG,WAAWH,MAAM,oBACzBZ,EAAAA,EAAAA,KAAA,OAAKY,MAAM,eAAeG,GAAG,kBAAkBE,KAAK,cAEtDpB,EAAAA,EAAAA,MAAA,OAAKe,MAAM,WAAUb,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKe,GAAG,mBAAmBH,MAAM,4BACjCZ,EAAAA,EAAAA,KAAA,OACEY,MAAM,eACNG,GAAG,0BACHE,KAAK,cAGTpB,EAAAA,EAAAA,MAAA,OAAKe,MAAM,WAAUb,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OACEe,GAAG,sBACHH,MAAM,+BAERZ,EAAAA,EAAAA,KAAA,OACEY,MAAM,eACNG,GAAG,6BACHE,KAAK,cAKTjB,EAAAA,EAAAA,KAAA,OAAKe,GAAG,gBAAgBE,KAAK,WAE7BjB,EAAAA,EAAAA,KAAA,OAAKY,MAAM,mBAAkBb,UAC3BC,EAAAA,EAAAA,KAAA,UAAQe,GAAG,gBAAehB,SAAC,+BAOzC,C","sources":["pages/CloverPayment.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDiscountPrice } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport LayoutOne from \"../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport {\r\n  useListOrderDetailsQuery,\r\n  usePayOrderMutation,\r\n  useDeliverOrderMutation,\r\n  \r\n} from \"../store/services/order\";\r\n\r\n\r\nconst CloverPayment = () => {\r\n  const dispatch = useDispatch();\r\n  let { pathname } = useLocation();\r\n  let { orderId } = useParams();\r\n\r\n  //const { formData } = pathname.state || {};\r\n // const orderId = formData.orderId;\r\n  const orderDetails = useListOrderDetailsQuery(orderId);\r\n  const { order, error, loading } = orderDetails;\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [clover, setClover] = useState(null);\r\n  const [orderData, setOrderData] = useState({\r\n    _id: \"\",\r\n    source: \"\",\r\n  });\r\n  /*useEffect(() => {\r\n    // Load the Clover SDK script\r\n    const script = document.createElement('script');\r\n    script.src = \"https://checkout.sandbox.dev.clover.com/sdk.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);*/\r\n\r\n  const addCloverScript = () => {\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src = \"https://checkout.sandbox.dev.clover.com/sdk.js\";\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n      initializeClover();\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  //const Clover = require(\"clover\")(\"075f0529-3eb8-4826-a36d-d8a8092667ed\");\r\n  const initializeClover = () => {\r\n    const apiKey = \"b829a56bd1537aa8e45df8ef09b16919\";\r\n    const cloverInstance = new window.Clover(apiKey, {\r\n      merchantId: \"RCTSTAVI0010002\",\r\n    });\r\n\r\n    setClover(cloverInstance);\r\n    const elements = clover.elements();\r\n\r\n    //create card elements\r\n    const cardNumber = elements.create(\"CARD_NUMBER\");\r\n    const cardName = elements.create(\"CARD_NAME\");\r\n    const cardDate = elements.create(\"CARD_DATE\");\r\n    const cardCvv = elements.create(\"CARD_CVV\");\r\n    const cardPostalCode = elements.create(\"CARD_POSTAL_CODE\");\r\n\r\n    //mount each element\r\n    cardNumber.mount(\"#card-number\");\r\n    cardName.mount(\"#card-name\");\r\n    cardDate.mount(\"#card-date\");\r\n    cardCvv.mount(\"#card-cvv\");\r\n    cardPostalCode.mount(\"#card-postal-code\");\r\n\r\n    // Add event listeners for validation errors\r\n    const addEventListeners = (element, errorElementId, errorKey) => {\r\n      const displayError = document.getElementById(errorElementId);\r\n      element.addEventListener(\"change\", function (event) {\r\n        displayError.innerHTML = event[errorKey].error || \"\";\r\n      });\r\n      element.addEventListener(\"blur\", function (event) {\r\n        displayError.innerHTML = event[errorKey].error || \"\";\r\n      });\r\n    };\r\n\r\n    addEventListeners(cardNumber, \"card-number-errors\", \"CARD_NUMBER\");\r\n    addEventListeners(cardName, \"card-name-errors\", \"CARD_NAME\");\r\n    addEventListeners(cardDate, \"card-date-errors\", \"CARD_DATE\");\r\n    addEventListeners(cardCvv, \"card-cvv-errors\", \"CARD_CVV\");\r\n    addEventListeners(\r\n      cardPostalCode,\r\n      \"card-postal-code-errors\",\r\n      \"CARD_POSTAL_CODE\"\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!order || order._id !== Number(orderId)) {\r\n     // dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(useListOrderDetailsQuery.initiate(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!sdkReady) {\r\n        addCloverScript();\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, sdkReady]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (clover) {\r\n      try {\r\n        const result = await clover.createToken();\r\n        if (result.errors) {\r\n          Object.values(result.errors).forEach((value) => {\r\n            console.log(value);\r\n          });\r\n        } else {\r\n          const token = await result.token;\r\n          setOrderData({\r\n            ...orderData,\r\n            _id: orderId,\r\n            source: token\r\n          })\r\n          alert(token);\r\n          usePayOrderMutation.initiate(orderData);\r\n          //createCharge(token);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  /*\r\n  form.addEventListener(\"submit\", function (event) {\r\n    event.preventDefault();\r\n    clover\r\n      .createToken()\r\n      .then(async function (result) {\r\n        if (result.errors) {\r\n          Object.values(result.errors).forEach(function (value) {\r\n            console.log(value);\r\n          });\r\n        } else {\r\n          const token = await result.token;\r\n          alert(token);\r\n          //cloverTokenHandler(token);\r\n          createCharge(token);\r\n        }\r\n      })\r\n      .catch(function (data) {\r\n        console.log(data);\r\n      });\r\n  });\r\n\r\n*/\r\n\r\n  //use token as parameter in a create charge function\r\n  const createCharge = (token) => {\r\n    fetch(\"/charge\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        amount: 1000,\r\n        source: token,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        alert(JSON.stringify(data));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Checkout\"\r\n        description=\"Clover Secure Payment Page for The Cage SShop\"\r\n      />\r\n      <LayoutOne headerTop=\"visibile\">\r\n        {/*breadcrumb*/}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Checkout\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"/assets/img/bg/breadcrumb.png\"\r\n        />\r\n        <div class=\"container\">\r\n          <form\r\n            action=\"/charge\"\r\n            method=\"post\"\r\n            id=\"payment-form\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <div class=\"form-row top-row\">\r\n              <div id=\"card-number\" class=\"field card-number\"></div>\r\n              <div\r\n                class=\"input-errors\"\r\n                id=\"card-number-errors\"\r\n                role=\"alert\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div id=\"card-name\" class=\"field card-name\"></div>\r\n              <div\r\n                class=\"input-errors\"\r\n                id=\"card-name-errors\"\r\n                role=\"alert\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div id=\"card-date\" class=\"field card-date\"></div>\r\n              <div\r\n                class=\"input-errors\"\r\n                id=\"card-date-errors\"\r\n                role=\"alert\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div id=\"card-cvv\" class=\"field card-cvv\"></div>\r\n              <div class=\"input-errors\" id=\"card-cvv-errors\" role=\"alert\"></div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div id=\"card-postal-code\" class=\"field card-postal-code\"></div>\r\n              <div\r\n                class=\"input-errors\"\r\n                id=\"card-postal-code-errors\"\r\n                role=\"alert\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"form-row\">\r\n              <div\r\n                id=\"card-street-address\"\r\n                class=\"field card-street-address\"\r\n              ></div>\r\n              <div\r\n                class=\"input-errors\"\r\n                id=\"card-street-address-errors\"\r\n                role=\"alert\"\r\n              ></div>\r\n            </div>\r\n\r\n            {/*<!--Card Response-->*/}\r\n            <div id=\"card-response\" role=\"alert\"></div>\r\n            {/*<!--Button Container-->*/}\r\n            <div class=\"button-container\">\r\n              <button id=\"submit_button\">Submit Payment</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CloverPayment;\r\n"],"names":["dispatch","useDispatch","pathname","useLocation","orderId","useParams","orderDetails","useListOrderDetailsQuery","order","_useState","error","loading","useState","_useState2","_slicedToArray","sdkReady","setSdkReady","_useState3","_useState4","clover","setClover","_useState5","_id","source","_useState6","orderData","setOrderData","initializeClover","cloverInstance","window","Clover","merchantId","elements","cardNumber","create","cardName","cardDate","cardCvv","cardPostalCode","mount","addEventListeners","element","errorElementId","errorKey","displayError","document","getElementById","addEventListener","event","innerHTML","useEffect","Number","isPaid","script","createElement","type","src","async","onload","body","appendChild","addCloverScript","initiate","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","token","wrap","_context","prev","next","preventDefault","createToken","sent","errors","Object","values","forEach","value","console","log","_objectSpread","alert","usePayOrderMutation","t0","stop","_x","apply","arguments","_jsxs","Fragment","children","_jsx","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","class","action","method","id","onSubmit","role"],"sourceRoot":""}