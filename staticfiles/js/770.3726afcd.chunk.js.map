{"version":3,"file":"static/js/770.3726afcd.chunk.js","mappings":"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","sources":["pages/ShopBrandGrid.js","store/services/product.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport { getSortedProducts } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport LayoutOne from \"../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../wrappers/product/ShopProducts\";\r\n\r\nconst ShopBrandGrid = () => {\r\n  let { pathname } = useLocation();\r\n  let { id } = useParams();\r\n\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\"brand\");\r\n  const [sortValue, setSortValue] = useState(id);\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 15;\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"The Cage Product Catalog\"\r\n        description=\"The Cage SShop Product Catalog.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/breadcrumb-light.png\"\r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                {/* shop sidebar */}\r\n                <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopBrandGrid;\r\n","import { api } from \"./api\";\r\n\r\nexport const productApi = api.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // Product endpoints\r\n    listProducts: builder.query({\r\n      query: () =>  `/products/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByCategory: builder.query({\r\n      query: (category) => `/products/category/${category}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByTag: builder.query({\r\n      query: (id) => `/products/tag/${id}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listTopProducts: builder.query({\r\n      query: () => \"/products/top/\",\r\n      providesTags: [\"Product\"],\r\n    }),\r\n     getProduct: builder.query({\r\n      query: (id) => `/products/${id}/`, // Replace with your actual API endpoint\r\n      providesTags: (result, error, id) => [{ type: 'Product', id }],\r\n    }),\r\n    deleteProduct: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/products/delete/${id}/`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    createProduct: builder.mutation({\r\n      query: () => ({\r\n        url: `/products/create/`,\r\n        method: 'POST',\r\n        body: {},\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    updateProduct: builder.mutation({\r\n      query: (product) => ({\r\n        url: `/products/update/${product.id}/`,\r\n        method: 'PUT',\r\n        body: product,\r\n      }),\r\n      invalidatesTags: (result, error, product) => [{ type: 'Product', id: product.id }],\r\n    }),\r\n    createProductReview: builder.mutation({\r\n      query: ({ productId, review }) => ({\r\n        url: `/products/${productId}/reviews/`,\r\n        method: 'POST',\r\n        body: review,\r\n      }),\r\n      invalidatesTags: (result, error, { productId }) => [{ type: 'Product', id: productId }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useListProductsQuery,\r\n  useListProductsByCategoryQuery,\r\n  useListProductsByTagQuery,\r\n  useListTopProductsQuery,\r\n  useGetProductQuery,\r\n  useDeleteProductMutation,\r\n  useCreateProductMutation,\r\n  useUpdateProductMutation,\r\n  useCreateProductReviewMutation,\r\n} = productApi;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/services/product\";\r\n\r\n\r\nconst ShopSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const HandleSearch = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    // Fetch products from backend using searchTerm\r\n    const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n    \r\n    navigate(`/shop-filtered-grid/${data}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" onSubmit={HandleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search here...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button type=\"submit\">\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useListProductsByCategoryQuery } from \"../../store/services/product\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [productData, setProductData] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const { data, isLoading, error } = useListProductsByCategoryQuery(searchTerm);\r\n\r\n  useEffect(() => {\r\n    setProductData(data);\r\n\r\n    if (productData) {\r\n      navigate(`/shop-filtered-grid/${productData}`);\r\n    }\r\n  }, [searchTerm, productData, navigate]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={(e) => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={(e) => {\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                        setSearchTerm(category);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func,\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/services/product\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [productData, setProductData] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n  useEffect(() => {   \r\n    setProductData(data);\r\n\r\n    if (productData) {\r\n      navigate(`/shop-filtered-grid/${productData}`);\r\n    }\r\n  }, [searchTerm, productData, navigate]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                      setSearchTerm(key);                      \r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n  getIndividualBrands,\n  getIndividualCategories,\n  getIndividualTags,\n  getIndividualColors,\n  getProductsIndividualSizes\n} from \"../../helpers/product\";\nimport ShopSearch from \"../../components/product/ShopSearch\";\nimport ShopCategories from \"../../components/product/ShopCategories\";\nimport ShopColor from \"../../components/product/ShopColor\";\nimport ShopSize from \"../../components/product/ShopSize\";\nimport ShopTag from \"../../components/product/ShopTag\";\nimport ShopBrand from \"../../components/product/ShopBrand\";\n\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\n  const uniqueCategories = getIndividualCategories(products);\n  const uniqueTags = getIndividualTags(products);\n  \n\n  return (\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\n      {/* shop search */}\n      <ShopSearch />\n\n      {/* filter by categories */}\n      <ShopCategories\n        categories={uniqueCategories}\n        getSortParams={getSortParams}\n      />\n\n      {/* filter by tag */}\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams} />     \n\n    </div>\n  );\n};\n\nShopSidebar.propTypes = {\n  getSortParams: PropTypes.func,\n  products: PropTypes.array,\n  sideSpaceClass: PropTypes.string\n};\n\nexport default ShopSidebar;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount,\n  products,\n  getSortParams\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopActionFilter\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n        products={products}\n        getSortParams={getSortParams}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  getSortParams: PropTypes.func,\n  productCount: PropTypes.number,\n  products: PropTypes.array,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n"],"names":["pathname","useLocation","id","useParams","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","products","useSelector","state","product","useEffect","getSortedProducts","filterSortedProducts","slice","_jsxs","Fragment","children","_jsx","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","className","ShopSidebar","getSortParams","sideSpaceClass","ShopTopbar","getLayout","getFilterSortParams","productCount","length","sortedProductCount","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","productApi","api","injectEndpoints","endpoints","builder","listProducts","query","providesTags","listProductsByCategory","category","concat","listProductsByTag","listTopProducts","getProduct","result","error","type","deleteProduct","mutation","url","method","invalidatesTags","createProduct","body","updateProduct","createProductReview","_ref","productId","review","_ref2","useListProductsQuery","useListProductsByCategoryQuery","useListProductsByTagQuery","useListTopProductsQuery","useGetProductQuery","useDeleteProductMutation","useCreateProductMutation","useUpdateProductMutation","useCreateProductReviewMutation","searchTerm","setSearchTerm","navigate","useNavigate","onSubmit","e","preventDefault","_useListProductsByTag","data","isLoading","message","placeholder","value","onChange","target","categories","productData","setProductData","_useListProductsByCat","onClick","setActiveSort","map","key","tags","tag","uniqueCategories","getIndividualCategories","uniqueTags","getIndividualTags","clsx","ShopSearch","ShopCategories","ShopTag","ShopTopActionFilter"],"sourceRoot":""}