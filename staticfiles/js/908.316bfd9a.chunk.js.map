{"version":3,"file":"static/js/908.316bfd9a.chunk.js","mappings":"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","sources":["pages/ShopFilteredGrid.js","store/services/product.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { useListProductsByTagQuery } from \"../store/services/product\";\r\nimport { getSortedProducts } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport LayoutOne from \"../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../wrappers/product/ShopProducts\";\r\nimport { useListProductsQuery } from \"../store/services/product\";\r\nimport { setProducts } from \"../store/slices/product-slice\";\r\nimport { store } from \"../store/store\";\r\n\r\nconst ShopFilteredGrid = () => {\r\n  let { id } = useParams();\r\n  const { data, error, isLoading } = useListProductsQuery({refetchOnMountOrArgChange: true});\r\n  store.dispatch(setProducts(data));\r\n  const { products } = useSelector((state) => state.product);\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\"category\");\r\n  const [sortValue, setSortValue] = useState(id);\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  \r\n  \r\n  const pageLimit = 15;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error.message}</div>;\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"The Cage Product Catalog\"\r\n        description=\"The Cage SShop Product Catalog.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"/assets/img/bg/breadcrumb.png\"\r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                {/* shop sidebar */}\r\n                <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopFilteredGrid;\r\n","import { cageApi } from \"./cageApi\";\r\n\r\nexport const productApi = cageApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // Product endpoints\r\n    listProducts: builder.query({\r\n      query: () =>  `products/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByCategory: builder.query({\r\n      query: (category) => `products/category/${category}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByTag: builder.query({\r\n      query: (id) => `products/tag/${id}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listTopProducts: builder.query({\r\n      query: () => \"products/top/\",\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    getProduct: builder.query({\r\n      query: (id) => `products/${id}/`, // Replace with your actual API endpoint\r\n      providesTags: (result, error, id) => [{ type: 'Product', id }],\r\n    }),\r\n    getProducts: builder.query({\r\n      query: (query) =>  `products/query/${query}`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    deleteProduct: builder.mutation({\r\n      query: (id) => ({\r\n        url: `products/delete/${id}/`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    createProduct: builder.mutation({\r\n      query: () => ({\r\n        url: `products/create/`,\r\n        method: 'POST',\r\n        body: {},\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    updateProduct: builder.mutation({\r\n      query: (product) => ({\r\n        url: `products/update/${product.id}/`,\r\n        method: 'PUT',\r\n        body: product,\r\n      }),\r\n      invalidatesTags: (result, error, product) => [{ type: 'Product', id: product.id }],\r\n    }),\r\n    createProductReview: builder.mutation({\r\n      query: ({ productId, review }) => ({\r\n        url: `products/${productId}/reviews/`,\r\n        method: 'POST',\r\n        body: review,\r\n      }),\r\n      invalidatesTags: (result, error, { productId }) => [{ type: 'Product', id: productId }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useListProductsQuery,\r\n  useListProductsByCategoryQuery,\r\n  useListProductsByTagQuery,\r\n  useListTopProductsQuery,\r\n  useGetProductQuery,\r\n  useGetProductsQuery,\r\n  useDeleteProductMutation,\r\n  useCreateProductMutation,\r\n  useUpdateProductMutation,\r\n  useCreateProductReviewMutation,\r\n} = productApi;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/services/product\";\r\n\r\n\r\nconst ShopSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const HandleSearch = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    // Fetch products from backend using searchTerm\r\n    const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n    \r\n    navigate(`/shop-filtered-grid/${data}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" onSubmit={HandleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search here...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button type=\"submit\">\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getIndividualCategories,\n  getIndividualTags,\n  getIndividualColors,\n  getProductsIndividualSizes,\n} from \"../../helpers/product\";\nimport ShopSearch from \"../../components/product/ShopSearch\";\nimport ShopCategories from \"../../components/product/ShopCategories\";\nimport ShopTag from \"../../components/product/ShopTag\";\nimport { useListProductsQuery } from \"../../store/services/product\";\nimport { setProducts } from \"../../store/slices/product-slice\";\nimport { store } from \"../../store/store\";\n\nconst ShopSidebar = ({  products, getSortParams, sideSpaceClass }) => {\n \n  const uniqueCategories = getIndividualCategories(products);\n  const uniqueTags = getIndividualTags(products);\n  \n  \n  return (\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\n      {/* shop search */}\n      <ShopSearch />\n\n      {/* filter by categories */}\n      <ShopCategories\n        categories={uniqueCategories}\n        getSortParams={getSortParams}\n      />\n\n      {/* filter by tag */}\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams} />\n    </div>\n  );\n};\n\nShopSidebar.propTypes = {\n  getSortParams: PropTypes.func,\n  products: PropTypes.array,\n  sideSpaceClass: PropTypes.string,\n};\n\nexport default ShopSidebar;\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div>\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopAction\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  productCount: PropTypes.number,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n"],"names":["id","useParams","_useListProductsQuery","useListProductsQuery","refetchOnMountOrArgChange","data","error","isLoading","store","dispatch","setProducts","products","useSelector","state","product","_useState","useState","_useState2","_slicedToArray","layout","setLayout","_useState3","_useState4","sortType","setSortType","_useState5","_useState6","sortValue","setSortValue","_useState7","_useState8","filterSortType","setFilterSortType","_useState9","_useState10","filterSortValue","setFilterSortValue","_useState11","_useState12","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","_jsx","children","_jsxs","message","Fragment","SEO","titleTemplate","description","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","className","ShopSidebar","getSortParams","sideSpaceClass","ShopTopbar","getLayout","getFilterSortParams","productCount","length","sortedProductCount","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","productApi","cageApi","injectEndpoints","endpoints","builder","listProducts","query","providesTags","listProductsByCategory","category","concat","listProductsByTag","listTopProducts","getProduct","result","type","getProducts","deleteProduct","mutation","url","method","invalidatesTags","createProduct","body","updateProduct","createProductReview","_ref","productId","review","_ref2","useListProductsByCategoryQuery","useListProductsByTagQuery","useListTopProductsQuery","useGetProductQuery","useGetProductsQuery","useDeleteProductMutation","useCreateProductMutation","useUpdateProductMutation","useCreateProductReviewMutation","searchTerm","setSearchTerm","navigate","useNavigate","onSubmit","e","preventDefault","_useListProductsByTag","placeholder","value","onChange","target","categories","onClick","setActiveSort","map","key","tags","tag","uniqueCategories","getIndividualCategories","uniqueTags","getIndividualTags","clsx","ShopSearch","ShopCategories","ShopTag","setActiveLayout","ShopTopAction"],"sourceRoot":""}